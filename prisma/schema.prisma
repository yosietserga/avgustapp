generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_PRISMA_URL")
}

model Product {
  id              Int      @id @default(autoincrement())
  nombre          String   @db.VarChar(255)
  descripcion     String?  @db.Text
  composicion     String?  @db.VarChar(255)
  link_producto   String?  @db.VarChar(255)
  tipo            ProductType
  fecha_creacion  DateTime @default(now())
  estado          Boolean  @default(true)
  objectives      Objective[]
  phenologicalStages PhenologicalStage[]
  productsCropsRelations ProductsCropsRelation[]
}

enum ProductType {
  insecticida
  fungicida
  herbicida
  nutricion
  feromonas
  otros_insumos
}

model Objective {
  id              Int      @id @default(autoincrement())
  nombre          String   @db.VarChar(255)
  descripcion     String?  @db.Text
  imagen          String?  @db.VarChar(255)
  producto_id     Int?
  fecha_creacion  DateTime @default(now())
  product         Product? @relation(fields: [producto_id], references: [id])
  productsCropsRelations ProductsCropsRelation[]
}

model PhenologicalStage {
  id              Int      @id @default(autoincrement())
  nombre          String   @db.VarChar(255)
  descripcion     String?  @db.Text
  imagen          String?  @db.VarChar(255)
  fecha_inicio    DateTime? @db.Date
  fecha_fin       DateTime? @db.Date
  producto_id     Int?
  product         Product? @relation(fields: [producto_id], references: [id])
  segments        Segment[]
  productsCropsRelations ProductsCropsRelation[]
}

model Segment {
  id              Int      @id @default(autoincrement())
  nombre          String   @db.VarChar(255)
  etapa_id        Int?
  fecha_creacion  DateTime @default(now())
  phenologicalStage PhenologicalStage? @relation(fields: [etapa_id], references: [id])
  productsCropsRelations ProductsCropsRelation[]
}

model Crop {
  id              Int      @id @default(autoincrement())
  nombre          String   @db.VarChar(255)
  descripcion     String?  @db.Text
  pais_id         Int?
  country         Country? @relation(fields: [pais_id], references: [id])
  productsCropsRelations ProductsCropsRelation[]
}

model Country {
  id              Int      @id @default(autoincrement())
  nombre          String   @db.VarChar(255)
  crops           Crop[]
  productsCropsRelations ProductsCropsRelation[]
}

model ProductsCropsRelation {
  id                Int      @id @default(autoincrement())
  producto_id       Int?
  cultivo_id        Int?
  pais_id           Int?
  objetivo_id       Int?
  etapa_id          Int?
  segmento_id       Int?
  porcentaje_inicio Decimal? @db.Decimal(5, 2)
  porcentaje_fin    Decimal? @db.Decimal(5, 2)
  product           Product? @relation(fields: [producto_id], references: [id])
  crop              Crop?    @relation(fields: [cultivo_id], references: [id])
  country           Country? @relation(fields: [pais_id], references: [id])
  objective         Objective? @relation(fields: [objetivo_id], references: [id])
  phenologicalStage PhenologicalStage? @relation(fields: [etapa_id], references: [id])
  segment           Segment? @relation(fields: [segmento_id], references: [id])
}
